"use strict";(self.webpackChunktardito_dev=self.webpackChunktardito_dev||[]).push([[3776],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=p(n),m=r,y=d["".concat(s,".").concat(m)]||d[m]||u[m]||i;return n?a.createElement(y,l(l({ref:t},c),{},{components:n})):a.createElement(y,l({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var p=2;p<i;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3301:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const i={sidebar_position:10},l="TypeScript",o={unversionedId:"angular/typescript",id:"angular/typescript",title:"TypeScript",description:"We have seen that a component's class is defined in a TypeScript file.",source:"@site/docs/angular/typescript.md",sourceDirName:"angular",slug:"/angular/typescript",permalink:"/docs/angular/typescript",draft:!1,tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10},sidebar:"tutorialSidebar",previous:{title:"Data binding",permalink:"/docs/angular/data-binding"},next:{title:"The Missile Type",permalink:"/docs/angular/type-rocket"}},s={},p=[],c={toc:p};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"typescript"},"TypeScript"),(0,r.kt)("p",null,"We have seen that a component's class is defined in a TypeScript file."),(0,r.kt)("p",null,"But what is TypeScript?"),(0,r.kt)("p",null,"I like to define TypeScript as JavaScript + types:\nUnlike other programming languages, JavaScript does not require you to declare the type of a variable. This can cause issues in large applications where multiple developers collaborate."),(0,r.kt)("p",null,"Let's take an example:"),(0,r.kt)("p",null,"One developer declares a variable named ",(0,r.kt)("inlineCode",{parentName:"p"},"discount")," and assigns a numerical value ",(0,r.kt)("inlineCode",{parentName:"p"},"10"),". Their intention is to express the percentage value of the discount on products:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"let discount = 10;\n")),(0,r.kt)("p",null,"Another developer adds logic to modify the value of ",(0,r.kt)("inlineCode",{parentName:"p"},"discount")," for customers who have a 30% discount card:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'discount = "30%";\n')),(0,r.kt)("p",null,"Now, a potential problem arises because the ",(0,r.kt)("inlineCode",{parentName:"p"},"discount")," variable has changed its value from a number to a string without either developer noticing the issue."),(0,r.kt)("p",null,"TypeScript helps identify these problems during development before they turn into bugs."),(0,r.kt)("p",null,"The idea behind TypeScript is simple:"),(0,r.kt)("p",null,"Every time you declare a variable, you must specify its type. In the previous case, the ",(0,r.kt)("inlineCode",{parentName:"p"},"discount")," variable would become:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"let discount: number = 10;\n")),(0,r.kt)("p",null,"The syntax is to specify the variable's type between the declaration and the assignment. We can read the code as follows: we define a variable named ",(0,r.kt)("inlineCode",{parentName:"p"},"discount"),", which will be a number, and assign it the value 10."),(0,r.kt)("p",null,"If another developer tries to reassign a value other than a number later on:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"discount = '30%';\n")),(0,r.kt)("p",null,"they will receive an error during code writing and later during code compilation. This prevents the creation of malfunctions in the app."),(0,r.kt)("p",null,"The most commonly used basic types are ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"string"),", and ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean"),"."),(0,r.kt)("p",null,"With these types, you can create more complex types. For example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const discounts: number[] = [10, 20, 30, 50];\n")),(0,r.kt)("p",null,"Here, with ",(0,r.kt)("inlineCode",{parentName:"p"},"number[]"),", we classify ",(0,r.kt)("inlineCode",{parentName:"p"},"discounts")," as an array containing numbers."),(0,r.kt)("p",null,"Or:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const discounts: string[] = ['10%', '20%', '30%', '50%'];\n")),(0,r.kt)("p",null,"Here, with ",(0,r.kt)("inlineCode",{parentName:"p"},"string[]"),", we classify ",(0,r.kt)("inlineCode",{parentName:"p"},"discounts")," as an array containing strings."),(0,r.kt)("p",null,"However, the real advantage of TypeScript is realized when creating types to describe objects. Suppose we need to create an object:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const discount = {\n  label: '15%',\n  value: 15, \n  active: true\n};\n")),(0,r.kt)("p",null,"Where a ",(0,r.kt)("inlineCode",{parentName:"p"},"discount")," has a numerical value, a string representing the legend, and a boolean indicating whether the balance is active. If we wanted to create a type that describes the ",(0,r.kt)("inlineCode",{parentName:"p"},"discount")," object, it would look like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"type Discount = {\n  label: string;\n  value: number;\n  active: boolean;\n};\n")),(0,r.kt)("p",null,"Here, we use the ",(0,r.kt)("inlineCode",{parentName:"p"},"type")," keyword to indicate what we are creating, and the name is typically capitalized. Once a type is created, you can use it just like the basic types:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const discount: discount = {\n  label: '15%', \n  value: 15, \n  active: true\n};\n")),(0,r.kt)("p",null,"Or:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const discounts: discount[] = [\n  {\n    label: '15%', \n    value: 15, \n    active: true\n  },\n  {\n    label: '30%', \n    value: 30, \n    active: false\n  },\n];\n")),(0,r.kt)("p",null,"TypeScript requires further study, but the basics we've covered in this lesson will be all we need for this Angular course."))}u.isMDXComponent=!0}}]);
"use strict";(self.webpackChunktardito_dev=self.webpackChunktardito_dev||[]).push([[1364],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>c});var i=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},l=Object.keys(e);for(i=0;i<l.length;i++)n=l[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(i=0;i<l.length;i++)n=l[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=i.createContext({}),p=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=p(e.components);return i.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},u=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,m=r(e,["components","mdxType","originalType","parentName"]),u=p(n),c=a,h=u["".concat(s,".").concat(c)]||u[c]||d[c]||l;return n?i.createElement(h,o(o({ref:t},m),{},{components:n})):i.createElement(h,o({ref:t},m))}));function c(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=u;var r={};for(var s in t)hasOwnProperty.call(t,s)&&(r[s]=t[s]);r.originalType=e,r.mdxType="string"==typeof e?e:a,o[1]=r;for(var p=2;p<l;p++)o[p]=n[p];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}u.displayName="MDXCreateElement"},7558:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>l,metadata:()=>r,toc:()=>p});var i=n(7462),a=(n(7294),n(3905));const l={sidebar_position:16},o="Navigation",r={unversionedId:"angular/routing",id:"angular/routing",title:"Navigation",description:'Applications created with Angular are SPAs, or "Single Page Applications." They are a type of web application that operates within a single web page instead of requiring the loading of separate pages. In essence, when you navigate in a SPA, the main web page is loaded only once, and subsequently, information is dynamically updated without the need to reload the entire page.',source:"@site/docs/angular/routing.md",sourceDirName:"angular",slug:"/angular/routing",permalink:"/docs/angular/routing",draft:!1,tags:[],version:"current",sidebarPosition:16,frontMatter:{sidebar_position:16},sidebar:"tutorialSidebar",previous:{title:"Services",permalink:"/docs/angular/services"},next:{title:"Modules",permalink:"/docs/angular/modules"}},s={},p=[],m={toc:p};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,i.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"navigation"},"Navigation"),(0,a.kt)("p",null,'Applications created with Angular are SPAs, or "Single Page Applications." They are a type of web application that operates within a single web page instead of requiring the loading of separate pages. In essence, when you navigate in a SPA, the main web page is loaded only once, and subsequently, information is dynamically updated without the need to reload the entire page.'),(0,a.kt)("p",null,"To help us implement navigation, Angular provides a set of tools contained in a library called ",(0,a.kt)("inlineCode",{parentName:"p"},"@angular/router"),"."),(0,a.kt)("p",null,"When we generated our app, the Angular CLI included the module to enable navigation for us in a file called ",(0,a.kt)("inlineCode",{parentName:"p"},"app-routing.module.ts"),", which is located in the ",(0,a.kt)("inlineCode",{parentName:"p"},"app")," folder."),(0,a.kt)("p",null,"In that file, we find an empty array called ",(0,a.kt)("inlineCode",{parentName:"p"},"routes"),'. Here, Angular expects a list of subdomains we want to use in our application. Let\'s try, for example, to add a subdomain called "lista," where we will load our missile list:'),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-diff",metastring:'title="app-routing.module.ts"',title:'"app-routing.module.ts"'},"const routes: Routes = [\n+  { path: 'lista', component: ListaMissiliComponent }\n];\n")),(0,a.kt)("p",null,'Now, if we try to enter the "lista" subdomain in the URL ',(0,a.kt)("a",{parentName:"p",href:"http://localhost:4200/lista"},"http://localhost:4200/lista"),", we will encounter something unexpected\u2014two lists instead of one. Why is that?"),(0,a.kt)("p",null,"Open the ",(0,a.kt)("inlineCode",{parentName:"p"},"app.component.html")," file to find the reason:"),(0,a.kt)("p",null,"Angular routing loads the component that matches the respective subdomain inside the ",(0,a.kt)("inlineCode",{parentName:"p"},"<router-outlet></router-outlet>")," element, and we are loading a ",(0,a.kt)("inlineCode",{parentName:"p"},"<lista-missili>")," list above it."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-diff",metastring:'title="app.component.html"',title:'"app.component.html"'},"<h1>Hello world {{titolo}}!</h1>\n- <lista-missili></lista-missili>\n<router-outlet></router-outlet>\n")),(0,a.kt)("p",null,"By removing the missile list outside of the router, we will see that it appears uniquely and only when the subdomain is ",(0,a.kt)("inlineCode",{parentName:"p"},"/lista"),"."),(0,a.kt)("p",null,"At the moment, a missile only contains information such as its name, country of origin, and status. Let's extend its type to include a unique identifying code, height, and the date of its first flight:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-diff",metastring:'title="missile.ts"',title:'"missile.ts"'},"  active: boolean;\n+ id: string;\n+ height?: number;\n+ first_flight: string;\n}\n")),(0,a.kt)("p",null,"Here, with the ",(0,a.kt)("inlineCode",{parentName:"p"},"?")," symbol, we indicate that a missile may or may not have the ",(0,a.kt)("inlineCode",{parentName:"p"},"height")," property defined."),(0,a.kt)("p",null,"Now we need to modify the missile definition array inside the ",(0,a.kt)("inlineCode",{parentName:"p"},"missili")," service file:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-diff",metastring:'title="missili.service.ts"',title:'"missili.service.ts"'},"   country: 'Italy',\n   active: false,\n+  id: 'ita1',\n+  first_flight: '10-09-2010',\n  },\n  {\n    name: 'Tomahawk',\n    country: 'United States',\n    active: true,\n+   id: 'fogir038',\n+   first_flight: '10-09-2011',\n+   height: 70,\n  },\n  {\n    name: 'BrahMos',\n    country: 'India',\n    active: false,\n+   id: '5o59kd038',\n+   first_flight: '10-09-2020',\n+   height: 80,\n  },\n  {\n    name: 'Falcon 9',\n    country: 'United States',\n    active: true,\n+   id: 'fjgoei29',\n+   first_flight: '10-09-2016',\n+   height: 40,\n  },\n  {\n    name: 'Ariane 5',\n    country: 'France',\n    active: true,\n+   id: 'mgksowi59',\n+   first_flight: '10-09-2008',\n+   height: 62,\n  },\n")),(0,a.kt)("p",null,"For the first missile, we do not have the height, so we do not include the ",(0,a.kt)("inlineCode",{parentName:"p"},"height")," property."),(0,a.kt)("p",null,"Now let's create another component called ",(0,a.kt)("inlineCode",{parentName:"p"},"missile-info"),", which we will use to have a dedicated page with all the details of a missile."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"ng generate component missile-info\n")),(0,a.kt)("p",null,"Let's start with its definition:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="missile-info.component.ts"',title:'"missile-info.component.ts"'},"import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MissiliService } from '../missili.service';\nimport { Missile } from '../missile/missile';\n\n@Component({\n  selector: 'missile-info',\n  templateUrl: './missile-info.component.html',\n  styleUrls: ['./missile-info.component.css']\n})\nexport class MissileInfoComponent {\n  constructor(private missiliService: MissiliService, private route: ActivatedRoute) {}\n  \n  missile?: Missile;\n\n  getMissile(): Missile | undefined {\n    const id = this.route.snapshot.paramMap.get('id');\n    return this.missiliService.getMissili().find(missile => missile.id === id)\n  }\n\n  ngOnInit(): void {\n    this.missile = this.getMissile();\n  }\n}\n")),(0,a.kt)("p",null,"Let's describe the contents of the file:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"We import the ",(0,a.kt)("inlineCode",{parentName:"p"},"Component")," decorator from Angular's ",(0,a.kt)("inlineCode",{parentName:"p"},"core")," library.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"We import the ",(0,a.kt)("inlineCode",{parentName:"p"},"ActivatedRoute")," service from Angular's ",(0,a.kt)("inlineCode",{parentName:"p"},"router")," library.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"We import the ",(0,a.kt)("inlineCode",{parentName:"p"},"MissiliService")," service.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"We import the ",(0,a.kt)("inlineCode",{parentName:"p"},"Missile")," type.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"We use the decorator to register the new component in Angular and provide the selector name, the template file name, and the style file name.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"We create and export a class called ",(0,a.kt)("inlineCode",{parentName:"p"},"MissileInfoComponent")," that:"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Accepts in its constructor the two services, ",(0,a.kt)("inlineCode",{parentName:"li"},"missiliService")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"route"),", which we need inside the component."),(0,a.kt)("li",{parentName:"ul"},"Defines a ",(0,a.kt)("inlineCode",{parentName:"li"},"missile")," property of type ",(0,a.kt)("inlineCode",{parentName:"li"},"Missile")," or undefined."),(0,a.kt)("li",{parentName:"ul"},"Defines a method called ",(0,a.kt)("inlineCode",{parentName:"li"},"getMissile")," that:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Uses the ",(0,a.kt)("inlineCode",{parentName:"li"},"route")," service to retrieve the ",(0,a.kt)("inlineCode",{parentName:"li"},"id")," from the URL."),(0,a.kt)("li",{parentName:"ul"},"Uses the ",(0,a.kt)("inlineCode",{parentName:"li"},"missiliService")," service to retrieve missiles and return the one with the same ",(0,a.kt)("inlineCode",{parentName:"li"},"id")," as in the URL or undefined if the missile does not exist."))),(0,a.kt)("li",{parentName:"ul"},"Calls the ",(0,a.kt)("inlineCode",{parentName:"li"},"getMissile")," method and sets the ",(0,a.kt)("inlineCode",{parentName:"li"},"missile")," property with the value it returns when the component is constructed (",(0,a.kt)("inlineCode",{parentName:"li"},"ngOnInit"),").")))),(0,a.kt)("p",null,"As a template, we use:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html",metastring:'title="missile-info.component.html"',title:'"missile-info.component.html"'},'<div *ngIf="missile">\n  <img src="https://picsum.photos/id/967/500/500" />\n  <div>\n    <h3>{{missile.name}}</h3>\n    <p *ngFor="let item of missile | keyvalue">\n      {{item.key}}: {{item.value}}\n    </p>\n  </div>\n</div>\n')),(0,a.kt)("p",null,"In this template, most of the syntax should be familiar, but we find a particularity in the following line:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html"},'<p *ngFor="let item of missile | keyvalue">\n')),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"|"),' symbol is an identifier for what is called a "pipe" in Angular. There are various pipes in Angular, and here we see the ',(0,a.kt)("inlineCode",{parentName:"p"},"keyvalue")," pipe, which, in this case, transforms the ",(0,a.kt)("inlineCode",{parentName:"p"},"missile")," object into an array of objects ",(0,a.kt)("inlineCode",{parentName:"p"},"{key, value}"),". This allows us in the next line to load the key and then the value."),(0,a.kt)("p",null,"Okay, our ",(0,a.kt)("inlineCode",{parentName:"p"},"missile-info")," component is ready to be loaded!"),(0,a.kt)("p",null,"Let's add the subdomain where we want to load the new component we created:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-diff",metastring:'title="app-routing.module.ts"',title:'"app-routing.module.ts"'},"+\n\n import { MissileInfoComponent } from './missile-info/missile-info.component';\n\nconst routes: Routes = [\n  { path: 'lista', component: ListaMissiliComponent },\n+  { path: 'missile/:id', component: MissileInfoComponent },\n];\n")),(0,a.kt)("p",null,"Here, with the syntax ",(0,a.kt)("inlineCode",{parentName:"p"},":id"),', we instruct Angular to treat everything that comes after the "missile/" subdomain as a parameter called ',(0,a.kt)("inlineCode",{parentName:"p"},"id")," (a parameter used by the ",(0,a.kt)("inlineCode",{parentName:"p"},"missile-info")," component)."),(0,a.kt)("p",null,"Now, by navigating to ",(0,a.kt)("a",{parentName:"p",href:"http://localhost:4200/missile/ita1"},"http://localhost:4200/missile/ita1"),", we should see our new component with the missile having the ID ",(0,a.kt)("inlineCode",{parentName:"p"},"ita1"),"."),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Did you miss something? ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/lucatardi/spazio/commit/cc17998ba92e55ecc798d6662b43daf40e8facb8?diff=split"},"Here")," is the code for this lesson.")))}d.isMDXComponent=!0}}]);
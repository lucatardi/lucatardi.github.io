"use strict";(self.webpackChunktardito_dev=self.webpackChunktardito_dev||[]).push([[3783],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>f});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),s=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=s(e.components);return n.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),p=s(r),f=o,d=p["".concat(l,".").concat(f)]||p[f]||m[f]||a;return r?n.createElement(d,i(i({ref:t},c),{},{components:r})):n.createElement(d,i({ref:t},c))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=p;var u={};for(var l in t)hasOwnProperty.call(t,l)&&(u[l]=t[l]);u.originalType=e,u.mdxType="string"==typeof e?e:o,i[1]=u;for(var s=2;s<a;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},7013:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>u,toc:()=>s});var n=r(7462),o=(r(7294),r(3905));const a={sidebar_position:1},i="Two sums",u={unversionedId:"algorithms/sumtwo",id:"algorithms/sumtwo",title:"Two sums",description:"Problem",source:"@site/docs/algorithms/sumtwo.md",sourceDirName:"algorithms",slug:"/algorithms/sumtwo",permalink:"/it/docs/algorithms/sumtwo",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Algorithms",permalink:"/it/docs/category/algorithms"},next:{title:"Angular",permalink:"/it/docs/category/angular"}},l={},s=[{value:"Problem",id:"problem",level:2},{value:"Follow up questions",id:"follow-up-questions",level:2},{value:"Brute force Solution",id:"brute-force-solution",level:2}],c={toc:s};function m(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"two-sums"},"Two sums"),(0,o.kt)("h2",{id:"problem"},"Problem"),(0,o.kt)("p",null,"Given an array and an integer target, return indices of the two numbers such that they add up to target."),(0,o.kt)("h2",{id:"follow-up-questions"},"Follow up questions"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Can we assume the input array conteins only integer values? \u2705"),(0,o.kt)("li",{parentName:"ul"},"Are there more than a possible result? \u274c")),(0,o.kt)("h2",{id:"brute-force-solution"},"Brute force Solution"),(0,o.kt)("p",null,"We need to sum each number of the list with all the rest of the numbers."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"for each number in the input array\n  create a subset array which starting from the index of the current number\n  for each number of the subset array\n    if number of input array + number of the subset array is equal to target\n      return an array with current index array and current index subset array\n")),(0,o.kt)("p",null,"Let's code it:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"def twoSum(nums, target):\n  for idx, number in enumerate(nums):\n    for nextIdx, nextNumber in enumerate(nums[idx + 1:]):\n      if (number + nextNumber == target):\n        return [idx, nextIdx + idx + 1]\n")))}m.isMDXComponent=!0}}]);